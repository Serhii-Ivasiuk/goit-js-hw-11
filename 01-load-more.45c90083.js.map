{"mappings":"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","sources":["src/js/01-load-more.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport axios from 'axios';\n\nconst refs = {\n  form: document.querySelector('#search-form'),\n  gallery: document.querySelector('.gallery'),\n  loadMoreBtn: document.querySelector('.load-more'),\n};\n\nconst notificationType = {\n  SUCCESS: 'success',\n  FAILURE: 'failure',\n  INFO: 'info',\n};\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst searchParams = new URLSearchParams({\n  key: '34105026-760e87e01f05ad85b03df7d04',\n  q: '',\n  image_type: 'photo',\n  orientation: 'horizontal',\n  safesearch: true,\n  per_page: 40,\n  page: 1,\n});\n\nlet page = 0;\nlet simpleLightbox = null;\n\nrefs.loadMoreBtn.style.display = 'none';\nrefs.form.addEventListener('submit', handleFormSubmit);\nrefs.loadMoreBtn.addEventListener('click', handleLoadMoreBtnClick);\n\nasync function handleFormSubmit(e) {\n  e.preventDefault();\n\n  refs.loadMoreBtn.style.display = 'none';\n\n  clearMarkup();\n\n  page = 1;\n\n  searchParams.set('page', page);\n\n  const query = e.target.elements.searchQuery.value.trim();\n\n  if (query === '') {\n    refs.form.reset();\n    showNotification(\n      notificationType.INFO,\n      'Please, enter your search request.'\n    );\n    return;\n  }\n\n  searchParams.set('q', query);\n\n  const response = await getImages();\n\n  if (response.data.total === 0) {\n    showNotification(\n      notificationType.FAILURE,\n      'Sorry, there are no images matching your search query. Please try again.'\n    );\n    return;\n  }\n\n  showNotification(\n    notificationType.SUCCESS,\n    `Hooray! We found ${response.data.totalHits} images.`\n  );\n\n  renderCards(response.data.hits);\n\n  simpleLightbox = new SimpleLightbox('.gallery a');\n\n  refs.loadMoreBtn.style.display = 'block';\n}\n\nasync function handleLoadMoreBtnClick() {\n  page += 1;\n\n  searchParams.set('page', page);\n\n  const response = await getImages();\n\n  renderCards(response.data.hits);\n\n  autoScrollPage();\n\n  simpleLightbox.refresh();\n\n  if (\n    response.data.totalHits <\n    searchParams.get('page') * searchParams.get('per_page')\n  ) {\n    refs.loadMoreBtn.style.display = 'none';\n    showNotification(\n      notificationType.INFO,\n      \"We're sorry, but you've reached the end of search results.\"\n    );\n    renderEndMessage();\n  }\n}\n\nasync function getImages() {\n  try {\n    return await axios.get(`${BASE_URL}?${searchParams}`);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nfunction renderCards(images) {\n  images.map(\n    ({\n      webformatURL,\n      largeImageURL,\n      tags,\n      likes,\n      views,\n      comments,\n      downloads,\n    }) => {\n      refs.gallery.insertAdjacentHTML(\n        'beforeend',\n        `\n        <a href=\"${largeImageURL}\">\n          <div class=\"photo-card\">\n            <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n            <div class=\"info\">\n              <p class=\"info-item\">\n                <b>Likes</b>\n                ${likes}\n              </p>\n              <p class=\"info-item\">\n                <b>Views</b>\n                ${views}\n              </p>\n              <p class=\"info-item\">\n                <b>Comments</b>\n                ${comments}\n              </p>\n              <p class=\"info-item\">\n                <b>Downloads</b>\n                ${downloads}\n              </p>\n            </div>\n          </div>\n        </a>\n        `\n      );\n    }\n  );\n}\n\nfunction renderEndMessage() {\n  refs.gallery.insertAdjacentHTML(\n    'beforeend',\n    `\n    <p class=\"end-message\">\n      The end of search results.\n    </p>\n    `\n  );\n}\n\nfunction clearMarkup() {\n  refs.gallery.innerHTML = '';\n}\n\nfunction showNotification(type, message) {\n  return Notiflix.Notify[type](message);\n}\n\nfunction autoScrollPage() {\n  const { height: cardHeight } =\n    refs.gallery.firstElementChild.getBoundingClientRect();\n\n  window.scrollBy({\n    top: cardHeight * 2,\n    behavior: 'smooth',\n  });\n}\n"],"names":["$bpxeT","parcelRequire","$c3ddedcda2f549ef$var$refs","form","document","querySelector","gallery","loadMoreBtn","$c3ddedcda2f549ef$var$notificationType","$c3ddedcda2f549ef$var$BASE_URL","$c3ddedcda2f549ef$var$searchParams","URLSearchParams","key","q","image_type","orientation","safesearch","per_page","page","$c3ddedcda2f549ef$var$page","$c3ddedcda2f549ef$var$simpleLightbox","$c3ddedcda2f549ef$var$_handleFormSubmit","$parcel$interopDefault","$2TvXO","mark","_callee","e","query","response","preventDefault","style","display","$c3ddedcda2f549ef$var$clearMarkup","set","target","elements","searchQuery","value","trim","reset","$c3ddedcda2f549ef$var$showNotification","$c3ddedcda2f549ef$var$getImages","_ctx","sent","data","total","concat","totalHits","$c3ddedcda2f549ef$var$renderCards","hits","$5IjG7","apply","this","arguments","$c3ddedcda2f549ef$var$_handleLoadMoreBtnClick","$c3ddedcda2f549ef$var$autoScrollPage","refresh","get","$c3ddedcda2f549ef$var$renderEndMessage","$c3ddedcda2f549ef$var$_getImages","$dIxxU","default","console","error","t0","images","map","param","webformatURL","largeImageURL","tags","likes","views","comments","downloads","insertAdjacentHTML","innerHTML","type","message","$6JpON","Notify","cardHeight","firstElementChild","getBoundingClientRect","height","window","scrollBy","top","behavior","addEventListener"],"version":3,"file":"01-load-more.45c90083.js.map"}