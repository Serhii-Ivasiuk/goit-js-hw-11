{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,0BAKA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,gBAC7BC,QAASF,SAASC,cAAc,YAChCE,YAAaH,SAASC,cAAc,eAGhCG,EACK,UADLA,EAEK,UAFLA,EAGE,OAIFC,EAAe,IAAIC,gBAAgB,CACvCC,IAAK,qCACLC,EAAG,GACHC,WAAY,QACZC,YAAa,aACbC,YAAY,EACZC,SAAU,GACVC,KAAM,IAGR,IAAIC,EAAO,EACPC,EAAiB,KA4ErBC,eAAeC,IACb,IACE,aAAaC,EAAAC,QAAMC,IAAI,4BAAef,I,CACtC,MAAOgB,GACPC,QAAQD,MAAMA,E,EAIlB,SAASE,EAAYC,GACnBA,EAAOC,KACL,EAACC,aACCA,EAAYC,cACZA,EAAaC,KACbA,EAAIC,MACJA,EAAKC,MACLA,EAAKC,SACLA,EAAQC,UACRA,MAEAlC,EAAKI,QAAQ+B,mBACX,YACA,sBACWN,kEAEKD,WAAsBE,4IAI5BC,6GAIAC,gHAIAC,iHAIAC,sFAMX,G,CAoBP,SAASE,EAAiBC,EAAMC,GAC9B,OAAOC,EAAAzC,GAAS0C,OAAOH,GAAMC,E,CA7I/BtC,EAAKK,YAAYoC,MAAMC,QAAU,OACjC1C,EAAKC,KAAK0C,iBAAiB,UAG3BzB,eAAgC0B,GAC9BA,EAAEC,iBAEF7C,EAAKK,YAAYoC,MAAMC,QAAU,OAkIjC1C,EAAKI,QAAQ0C,UAAY,GA9HzBvC,EAAawC,IAAI,OAAQ/B,GAEzB,MAAMgC,EAAQJ,EAAEK,OAAOC,SAASC,YAAYC,MAAMC,OAElD,GAAc,KAAVL,EAMF,OALAhD,EAAKC,KAAKqD,aACVlB,EACE9B,EACA,sCAKJC,EAAawC,IAAI,IAAKC,GAEtB,MAAMO,QAAiBpC,IAEvB,GAA4B,IAAxBoC,EAASC,KAAKC,MAKhB,YAJArB,EACE9B,EACA,4EAKJ8B,EACE9B,EACA,oBAAoBiD,EAASC,KAAKE,qBAGpCjC,EAAY8B,EAASC,KAAKG,MAE1B1C,EAAiB,IAAIsB,EAAAqB,GAAJ,CAAmB,cAEpC5D,EAAKK,YAAYoC,MAAMC,QAAU,O,IA3CnC1C,EAAKK,YAAYsC,iBAAiB,SA8ClCzB,iBACEF,GAAQ,EAERT,EAAawC,IAAI,OAAQ/B,GAEzB,MAAMuC,QAAiBpC,IAEvBM,EAAY8B,EAASC,KAAKG,MAyF5B,WACE,MAAQE,OAAQC,GACd9D,EAAKI,QAAQ2D,kBAAkBC,wBAEjCC,OAAOC,SAAS,CACdC,IAAkB,EAAbL,EACLM,SAAU,U,CA7FZC,GAEApD,EAAeqD,UAGbf,EAASC,KAAKE,UACdnD,EAAae,IAAI,QAAUf,EAAae,IAAI,cAE5CtB,EAAKK,YAAYoC,MAAMC,QAAU,OACjCN,EACE9B,EACA,8DA0DJN,EAAKI,QAAQ+B,mBACX,YACA,mF","sources":["src/js/01-load-more.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport axios from 'axios';\n\nconst refs = {\n  form: document.querySelector('#search-form'),\n  gallery: document.querySelector('.gallery'),\n  loadMoreBtn: document.querySelector('.load-more'),\n};\n\nconst notificationType = {\n  SUCCESS: 'success',\n  FAILURE: 'failure',\n  INFO: 'info',\n};\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst searchParams = new URLSearchParams({\n  key: '34105026-760e87e01f05ad85b03df7d04',\n  q: '',\n  image_type: 'photo',\n  orientation: 'horizontal',\n  safesearch: true,\n  per_page: 40,\n  page: 1,\n});\n\nlet page = 1;\nlet simpleLightbox = null;\n\nrefs.loadMoreBtn.style.display = 'none';\nrefs.form.addEventListener('submit', handleFormSubmit);\nrefs.loadMoreBtn.addEventListener('click', handleLoadMoreBtnClick);\n\nasync function handleFormSubmit(e) {\n  e.preventDefault();\n\n  refs.loadMoreBtn.style.display = 'none';\n\n  clearMarkup();\n\n  searchParams.set('page', page);\n\n  const query = e.target.elements.searchQuery.value.trim();\n\n  if (query === '') {\n    refs.form.reset();\n    showNotification(\n      notificationType.INFO,\n      'Please, enter your search request.'\n    );\n    return;\n  }\n\n  searchParams.set('q', query);\n\n  const response = await getImages();\n\n  if (response.data.total === 0) {\n    showNotification(\n      notificationType.FAILURE,\n      'Sorry, there are no images matching your search query. Please try again.'\n    );\n    return;\n  }\n\n  showNotification(\n    notificationType.SUCCESS,\n    `Hooray! We found ${response.data.totalHits} images.`\n  );\n\n  renderCards(response.data.hits);\n\n  simpleLightbox = new SimpleLightbox('.gallery a');\n\n  refs.loadMoreBtn.style.display = 'block';\n}\n\nasync function handleLoadMoreBtnClick() {\n  page += 1;\n\n  searchParams.set('page', page);\n\n  const response = await getImages();\n\n  renderCards(response.data.hits);\n\n  autoScrollPage();\n\n  simpleLightbox.refresh();\n\n  if (\n    response.data.totalHits <\n    searchParams.get('page') * searchParams.get('per_page')\n  ) {\n    refs.loadMoreBtn.style.display = 'none';\n    showNotification(\n      notificationType.INFO,\n      \"We're sorry, but you've reached the end of search results.\"\n    );\n    renderEndMessage();\n  }\n}\n\nasync function getImages() {\n  try {\n    return await axios.get(`${BASE_URL}?${searchParams}`);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nfunction renderCards(images) {\n  images.map(\n    ({\n      webformatURL,\n      largeImageURL,\n      tags,\n      likes,\n      views,\n      comments,\n      downloads,\n    }) => {\n      refs.gallery.insertAdjacentHTML(\n        'beforeend',\n        `\n        <a href=\"${largeImageURL}\">\n          <div class=\"photo-card\">\n            <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n            <div class=\"info\">\n              <p class=\"info-item\">\n                <b>Likes</b>\n                ${likes}\n              </p>\n              <p class=\"info-item\">\n                <b>Views</b>\n                ${views}\n              </p>\n              <p class=\"info-item\">\n                <b>Comments</b>\n                ${comments}\n              </p>\n              <p class=\"info-item\">\n                <b>Downloads</b>\n                ${downloads}\n              </p>\n            </div>\n          </div>\n        </a>\n        `\n      );\n    }\n  );\n}\n\nfunction renderEndMessage() {\n  refs.gallery.insertAdjacentHTML(\n    'beforeend',\n    `\n    <p class=\"end-message\">\n      The end of search results.\n    </p>\n    `\n  );\n}\n\nfunction clearMarkup() {\n  refs.gallery.innerHTML = '';\n}\n\nfunction showNotification(type, message) {\n  return Notiflix.Notify[type](message);\n}\n\nfunction autoScrollPage() {\n  const { height: cardHeight } =\n    refs.gallery.firstElementChild.getBoundingClientRect();\n\n  window.scrollBy({\n    top: cardHeight * 2,\n    behavior: 'smooth',\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$1280f960daaf59c1$var$refs","form","document","querySelector","gallery","loadMoreBtn","$1280f960daaf59c1$var$notificationType","$1280f960daaf59c1$var$searchParams","URLSearchParams","key","q","image_type","orientation","safesearch","per_page","page","$1280f960daaf59c1$var$page","$1280f960daaf59c1$var$simpleLightbox","async","$1280f960daaf59c1$var$getImages","$2shzp","default","get","error","console","$1280f960daaf59c1$var$renderCards","images","map","webformatURL","largeImageURL","tags","likes","views","comments","downloads","insertAdjacentHTML","$1280f960daaf59c1$var$showNotification","type","message","$parcel$interopDefault","Notify","style","display","addEventListener","e","preventDefault","innerHTML","set","query","target","elements","searchQuery","value","trim","reset","response","data","total","totalHits","hits","$fZKcF","height","cardHeight","firstElementChild","getBoundingClientRect","window","scrollBy","top","behavior","$1280f960daaf59c1$var$autoScrollPage","refresh"],"version":3,"file":"01-load-more.dd6a7563.js.map"}